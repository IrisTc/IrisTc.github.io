(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{191:function(_,v,i){"use strict";i.r(v);var p=i(6),l=Object(p.a)({},(function(){var _=this,v=_.$createElement,i=_._self._c||v;return i("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[i("h1",{attrs:{id:"计算机网络习题"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#计算机网络习题"}},[_._v("#")]),_._v(" 计算机网络习题")]),_._v(" "),i("h3",{attrs:{id:"第一章-计算机网络概述"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第一章-计算机网络概述"}},[_._v("#")]),_._v(" 第一章 计算机网络概述")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("计算机网络的定义")]),_._v(" "),i("p",[_._v("计算机网络是指通过传输介质、通信设施和网络通信协议，把分散在不同地点的计算机设备互联起来，实现资源共享和数据传输的系统")])]),_._v(" "),i("li",[i("p",[_._v("计算机网络提供的基本功能")]),_._v(" "),i("p",[_._v("数据通信、资源共享、大容量存储、可靠系统、分布式处理")])]),_._v(" "),i("li",[i("p",[_._v("计算机网络的协议体系结构特征")]),_._v(" "),i("ul",[i("li",[_._v("网络实现的功能分解到若干层次，每个功能用对等层协议实现")]),_._v(" "),i("li",[_._v("相邻层次之间通过接口交互必要的信息，构成下层为上层提供服务的关系")])])]),_._v(" "),i("li",[i("p",[_._v("计算机网络的物理结构")]),_._v(" "),i("p",[_._v("由通信子网和资源子网组成。通信子网用于数据传输和通信控制，由通信处理设备构成的节点和通信传输线路组成；资源子网用于数据的处理、发送和接收，向网络用户提供的各种网络资源和网络服务")])]),_._v(" "),i("li",[i("p",[_._v("透明")]),_._v(" "),i("p",[_._v("指用户不必关心一个具体的计算机网络系统是怎样组成的，用户只需要遵循计算机网络使用的协议，由网络操作系统为用户自动管理、调用网络资源")])]),_._v(" "),i("li",[i("p",[_._v("拓扑结构")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("广域网")]),_._v(" "),i("p",[_._v("网状、不规则型")])]),_._v(" "),i("li",[i("p",[_._v("局域网")]),_._v(" "),i("p",[_._v("总线型、星形、树形")])])])])]),_._v(" "),i("h3",{attrs:{id:"第二章-计算机网络协议和体系"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第二章-计算机网络协议和体系"}},[_._v("#")]),_._v(" 第二章 计算机网络协议和体系")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("计算机网络协议的定义")]),_._v(" "),i("p",[_._v("是计算机网络中的计算机设备之间在相互通信时遵循的规则、标准和约定")])]),_._v(" "),i("li",[i("p",[_._v("网络协议三要素")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("语法：用来说明信息的格式")])]),_._v(" "),i("li",[i("p",[_._v("语义：用来说明PDU某些信息位组合的含义，标识通信双方可以理解的意思")])]),_._v(" "),i("li",[i("p",[_._v("同步：为完成一次通信所需要的不同数据单元之间的操作顺序规程")])])])]),_._v(" "),i("li",[i("p",[_._v("服务原语")]),_._v(" "),i("ul",[i("li",[_._v("组成：原语名、原语类型、原语参数")]),_._v(" "),i("li",[_._v("类型：请求、指示、响应、证实")]),_._v(" "),i("li",[_._v("原语名.原语类型(原语参数)")])])]),_._v(" "),i("li",[i("p",[_._v("TCP/IP参考模型有哪些层次")]),_._v(" "),i("p",[_._v("应用层、TCP层、IP层、网络接口层")])]),_._v(" "),i("li",[i("p",[i("img",{attrs:{src:"/images/image-20210124102132831.png",alt:"image-20210124102132831"}})])]),_._v(" "),i("li",[i("p",[_._v("PDU")]),_._v(" "),i("ul",[i("li",[_._v("定义作用：协议数据单元，用来描述通信协议")]),_._v(" "),i("li",[_._v("组成：由二进制数据0和1组成的数据块，由控制部分和数据部分组成：控制部分是通信双方遵循的规则和约定；数据部分一般为上一层次的协议数据单元")])])]),_._v(" "),i("li",[i("p",[_._v("当代计算机网络体系结构")]),_._v(" "),i("ul",[i("li",[_._v("层次：应用层、运输层、网络层、数据链路层、物理层")]),_._v(" "),i("li",[_._v("对应的协议数据单元：报文、报文段、分组、帧、位流")])])])]),_._v(" "),i("h3",{attrs:{id:"第三章-数据通信技术基础"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第三章-数据通信技术基础"}},[_._v("#")]),_._v(" 第三章 数据通信技术基础")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("数据通信系统由哪些组成")]),_._v(" "),i("ul",[i("li",[_._v("源系统、传输系统、目的系统")]),_._v(" "),i("li",[_._v("发送端由信源和变换器组成，信源把传输的各种信息转换成原始电信号，变换器把电信号转换成适合在信道上传输的信号")]),_._v(" "),i("li",[_._v("传输系统由传输介质以及传输设备、技术构成，电信号是通过通信子网传递的")]),_._v(" "),i("li",[_._v("接收端由反变换器和信宿组成，反变换器把信道传来的信号恢复成原始的电信号，再传给信宿，信宿将其转换成对应的信息")])])]),_._v(" "),i("li",[i("p",[_._v("通信方式")]),_._v(" "),i("p",[_._v("单向通信、双向交替通信、双向同时通信")])]),_._v(" "),i("li",[i("p",[_._v("同步传输")]),_._v(" "),i("p",[_._v("一次传输一个数据块，数据块中的每一位与前一位之间的传输时间是确定的")])]),_._v(" "),i("li",[i("p",[_._v("交换技术")]),_._v(" "),i("p",[_._v("长距离通信传输，物理距离上不可能架设中间没有节点的长距离线路；长距离传输中会有能量衰减、受到干扰")])]),_._v(" "),i("li",[i("p",[_._v("差错控制方法")]),_._v(" "),i("ul",[i("li",[_._v("前向纠错：在接收端不仅能检测出错的位置，而且能够纠正错误")]),_._v(" "),i("li",[_._v("自动请求重发：在接收端检测出差错，然后把出错信息传给发送方，请求发送方再重发一个正确的数据副本")])])]),_._v(" "),i("li",[i("p",[_._v("计算时延并分析")]),_._v(" "),i("p",[i("img",{attrs:{src:"/images/image-20210125091944713.png",alt:"image-20210125091944713"}})]),_._v(" "),i("p",[_._v("若数据长度大而数据传输率低，则在总的时延中，传输时延往往大于传播时延；若数据长度短而数据传输率高，则传播时延会是总时延中的主要成分")])]),_._v(" "),i("li",[i("p",[_._v("分组交换和电路交换计算")]),_._v(" "),i("p",[i("img",{attrs:{src:"/images/image-20210124105035262.png",alt:"image-20210124105035262"}})])]),_._v(" "),i("li",[i("p",[_._v("CRC计算")])]),_._v(" "),i("li",[i("p",[i("img",{attrs:{src:"/images/image-20210124112635274.png",alt:"image-20210124112635274"}})])]),_._v(" "),i("li",[i("p",[_._v("0110100 原码、曼彻斯特编码、差分曼彻斯特编码")]),_._v(" "),i("p",[_._v("0：从低到高，1：从高到底")]),_._v(" "),i("p",[i("img",{attrs:{src:"/images/image-20210124113128566.png",alt:"image-20210124113128566"}})])]),_._v(" "),i("li",[i("p",[_._v("曼彻斯特编码、差分曼彻斯特编码怎样实现位同步，编码效率")]),_._v(" "),i("p",[_._v("在每一位周期正中间加时钟信号，出现一次跳变，便于接收端提取位同步信号")]),_._v(" "),i("p",[_._v("每一位用到两个信号跳变，编码效率为50%")])])]),_._v(" "),i("h3",{attrs:{id:"第四章-应用层"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第四章-应用层"}},[_._v("#")]),_._v(" 第四章 应用层")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("什么是应用层协议，应用层协议与哪些概念相联系")]),_._v(" "),i("ul",[i("li",[_._v("应用层协议是网络应用的一部分，定义了运行在不同端系统上的应用程序进程互相传递报文的方式。")]),_._v(" "),i("li",[_._v("涉及到：交换的报文类型；报文的语法格式；报文中字段的语义；各种类型报文发送的先后顺序和规则")])])]),_._v(" "),i("li",[i("p",[_._v("网络应用采用哪些计算模式")]),_._v(" "),i("ul",[i("li",[_._v("C/S模式")]),_._v(" "),i("li",[_._v("B/S模式")]),_._v(" "),i("li",[_._v("P2P模式")]),_._v(" "),i("li",[_._v("云计算模式")])])]),_._v(" "),i("li",[i("p",[_._v("写出DNS纪录的格式")]),_._v(" "),i("p",[_._v("在DNS分布式数据库中存储有域名地址与IP地址映射的资源记录，一个资源记录占一行，一个资源记录包含4个字段，格式：Name,Value,Type,TTL")])]),_._v(" "),i("li",[i("p",[_._v("说明DNS的工作原理")]),_._v(" "),i("ul",[i("li",[_._v("客户机提出域名解析请求，发送给本地域名服务器")]),_._v(" "),i("li",[_._v("本地域名服务器收到请求后先查询本地域名缓存，若没有则发给根域名服务器，进行迭代查询")]),_._v(" "),i("li",[_._v("本地域名服务器把返回的结果保存到域名缓存，同时把结果返回给客户机")])])]),_._v(" "),i("li",[i("p",[_._v("写出HTTP请求报文的格式，解释各字段含义")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("请求报文")]),_._v(" "),i("p",[_._v("请求行、首部行、实体主体")])]),_._v(" "),i("li",[i("p",[_._v("响应报文")]),_._v(" "),i("p",[_._v("状态行、首部行、实体主体")])]),_._v(" "),i("li",[i("p",[_._v("请求行、状态行用来区别是请求报文还是响应报文")])]),_._v(" "),i("li",[i("p",[_._v("首部行用来说明浏览器、服务器或报文主体的一些信息")])]),_._v(" "),i("li",[i("p",[_._v("实体主体用在响应报文中")])])])]),_._v(" "),i("li",[i("p",[_._v("文件传输协议FTP为什么采用两个连接")]),_._v(" "),i("p",[_._v("FTP的客户机和服务器之间需要建立并行的”控制连接“和”数据连接“，分别通过端口21/20进行。控制连接在会话期间一直打开，控制连接仅用于传送和处理客户发出的连接请求；数据连接用于传输文件。服务器的控制进程在收到文件传输请求后建立传送进程和数据连接，在完成数据传送后关闭数据连接。")])]),_._v(" "),i("li",[i("p",[_._v("电子邮件系统由哪些部分构成")]),_._v(" "),i("ul",[i("li",[_._v("电子邮件协议：规定如何在两个互相通信的邮件进程之间交换信息，包括SMTP、POP3、IMAP")]),_._v(" "),i("li",[_._v("用户代理：用户与电子邮件系统的接口")]),_._v(" "),i("li",[_._v("电子邮件服务器：发送和接收邮件")])])]),_._v(" "),i("li",[i("p",[_._v("电子邮件涉及哪些协议，分别用在哪些地方")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("SMTP简单邮件传输协议")]),_._v(" "),i("p",[_._v("邮件服务器之间采用SMTP")])]),_._v(" "),i("li",[i("p",[_._v("POP3邮件读取协议")]),_._v(" "),i("p",[_._v("用户代理从邮件服务器中读取邮件时使用POP3或者IMAP")]),_._v(" "),i("p",[_._v("脱机")])]),_._v(" "),i("li",[i("p",[_._v("IMAP邮件读取协议")]),_._v(" "),i("p",[_._v("较复杂，联机")])])])]),_._v(" "),i("li",[i("p",[_._v("简述SMTP通信的3个阶段的过程")]),_._v(" "),i("p",[_._v("连接建立，包括用户代理与本地邮件服务器，以及本地邮件服务器与远程邮件服务器的连接")]),_._v(" "),i("p",[_._v("邮件传输，mailfrom给出邮件发送者，SMTP服务器返回是否准备好接收邮件，rcptto指出邮件收件人，SMTP服务器给出回答是否在系统中，data发送邮件内容，SMTP回答是否能接收邮件，SMTP客户机发送邮件内容完毕，SMTP服务器收到邮件后返回是否成功")]),_._v(" "),i("p",[_._v("连接释放，邮件发送完后，SMTP客户机发送quit命令，SMTP回答表示同意释放TCP连接")])]),_._v(" "),i("li",[i("p",[_._v("对同一个域名向DNS发出多次DNS请求报文后每次得到的IP地址不一样")]),_._v(" "),i("p",[_._v("每天访问站点的次数非常多，则网站为了使负载得到平衡，加快对请求的相应，设有好几个计算机主机，每个计算机都运行同样的服务器软件，IP地址不同，但域名相同")])])]),_._v(" "),i("h3",{attrs:{id:"第五章-运输层"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第五章-运输层"}},[_._v("#")]),_._v(" 第五章 运输层")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("写出运输层的作用，要解决哪些问题")]),_._v(" "),i("p",[_._v("运输层处于计算机网络的端系统之间，为应用层提供可靠的端到端的通信和运输连接。通过运输协议，把尽力交付的不可靠网络服务演变成支持网络应用的可靠网络服务")]),_._v(" "),i("p",[_._v("运输层要为进程提供复用和分用，为应用报文提供差错检测，包括传输数据出错、丢失、应答数据丢失、重复、时序、超时等，要为端系统提供流量控制，并对尽力交付的网络提供拥塞控制，还有运输连接建立与连接释放、连接控制和序号设置等")])]),_._v(" "),i("li",[i("p",[_._v("什么是运输层的复用与分用")]),_._v(" "),i("p",[_._v("复用是发送方不同的应用进程可以使用同一个传输层协议传送数据")]),_._v(" "),i("p",[_._v("分用是传输层在解析报文首部后能够把这些数据正确交付到目的应用程序（即交付到正确的套接字中）")])]),_._v(" "),i("li",[i("p",[_._v("停——等协议的基本设计思路")]),_._v(" "),i("p",[_._v("在发送方每发送完一个协议数据单元PDU后，就停止发送，等待接收方的确认数据，并把发送过的数据副本保留下来。若发送方收到的确认数据是肯定的，例如ACK，则发送方按顺序发送下一个PDU；若收到的确认数据是否定的，例如NAK，则发送方就重新发送上次发送过的PDU")])]),_._v(" "),i("li",[i("p",[_._v("回退N协议的基本设计思路")]),_._v(" "),i("p",[_._v("发送方可以连续发送落在发送窗口中的多个PDU，然后停止发送，等待接收方的确认；接收窗口W大小为1，接收方只能接受当前序号处在接收窗口中的PDU。若正确接收了到达的PDU，就向发送方反馈确认消息，然后接收窗口顺序滑动到下一个序号等待。若到达接收方的PDU序号与接收窗口中的序号不一致，将丢弃该PDU，向发送方再次反馈确认消息，接收窗口不滑动，发送窗口也不滑动。若发送方在超时时间间隔内没有收到确认消息，就要重新发送PDU")])]),_._v(" "),i("li",[i("p",[_._v("选择重传基本设计思路")]),_._v(" "),i("p",[_._v("若发送方连续发送多个数据单元后，接收方接收序号落在接收窗口内的PDU，若某个序号的PDU出错，接收方会缓存正确接收到的PDU。发送方在出错序号的PDU超时时间间隔到了之后，仅重新发送出错序号的PDU")])]),_._v(" "),i("li",[i("p",[_._v("比较停——等、回退N、选择重传三种网络协议的特点")]),_._v(" "),i("p",[_._v("停——等协议一次只能发送一个PDU，信道效率很低")]),_._v(" "),i("p",[_._v("回退N协议操作简单，接收窗口大小为1，仅接收落在窗口内的序号所对应的PDU，但出错序号后的PDU需要重新发送")]),_._v(" "),i("p",[_._v("选择重传协议的发送窗口和接收窗口要满足WT+WR<=2K-1")])]),_._v(" "),i("li",[i("p",[_._v("一个信道的数据传输率是4kbit/s，传播延迟为20ms，那么帧的大小在什么范围内，停——等协议才有至少50%的效率")])]),_._v(" "),i("li",[i("p",[_._v("运输层怎样实现差错检测和差错纠正")]),_._v(" "),i("p",[_._v("常用的校验方法有奇偶校验、循环冗余校验，错误纠正有前向纠错、自动请求重发")])]),_._v(" "),i("li",[i("p",[_._v("超时机制有什么用途")]),_._v(" "),i("p",[_._v("计算机网络中传输数据会出现丢失的情况，包括传输数据丢失和应答数据丢失。若在给定的时间间隔内没有收到期望的PDU，就可以判定出现了PDU丢失，再根据超时机制协议规则做出相应的处理")])]),_._v(" "),i("li",[i("p",[_._v("为什么要在PDU中设置序号字段")]),_._v(" "),i("p",[_._v("PDU传输数据信息，为了保证所传输的数据是有序的，并且是没有重复的，需要给所传输的PDU设置序号")])]),_._v(" "),i("li",[i("p",[_._v("TCP怎样进行流量控制")]),_._v(" "),i("p",[_._v("采用来自接收方的流量控制。通过报文段中的接收窗口字段，该字段给出接收方的接收缓冲区当前可用的字节数，告诉发送方可以发送报文段的字节数。")])]),_._v(" "),i("li",[i("p",[_._v("TCP怎样进行拥塞控制")]),_._v(" "),i("ul",[i("li",[_._v("开环控制：通过良好的设计避免拥塞问题的出现")]),_._v(" "),i("li",[_._v("闭环控制：通过反馈控制，在工作过程中动态控制拥塞，包括监视系统；报告；决策")])])]),_._v(" "),i("li",[i("p",[_._v("TCP和UDP是否都需要计算往返时延RTT")]),_._v(" "),i("p",[_._v("往返时延只是对运输层的TCP协议有用，因为TCP要根据平均往返时延RTT的值来设置超时计时器的超时时间；而UDP没有确认和重传机制，因此对UDP没有意义")])]),_._v(" "),i("li",[i("p",[i("img",{attrs:{src:"/images/image-20210124150527482.png",alt:"image-20210124150527482"}})])])]),_._v(" "),i("h3",{attrs:{id:"第六章-网络层"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第六章-网络层"}},[_._v("#")]),_._v(" 第六章 网络层")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("写出链路状态路由算法的要点")]),_._v(" "),i("p",[_._v("链路状态算法发送路由信息到互联网上所有的节点，然而对于每个路由器，仅发送它的路由表中描述了其自身链路状态的一部分")])]),_._v(" "),i("li",[i("p",[_._v("网络互联的规则是什么")]),_._v(" "),i("p",[_._v("网络在第N层上实现互联，第N层可以对应网络体系结构的任何一个层次")]),_._v(" "),i("p",[_._v("要求进行互联的两个网络的第N+1层及以上层的协议必须相同，N层及以下层可以不同")])]),_._v(" "),i("li",[i("p",[_._v("说明网络互联设备实现功能的包含关系")]),_._v(" "),i("p",[_._v("自顶向下：协议转换器、路由器、网桥、中继器")]),_._v(" "),i("p",[_._v("运输层及以上、网络层、数据链路层、物理层")])]),_._v(" "),i("li",[i("p",[_._v("什么叫CIDR，有什么特点")]),_._v(" "),i("p",[_._v("无分类域间编址，消除了传统的A类、B类和C类地址以及划分子网的概念，把32位IP地址划分为两个部分，前缀和主机，使用斜记法标识前缀所占位数，可以更加有效地分配IP地址空间")])]),_._v(" "),i("li",[i("p",[_._v("因特网中的内部路由协议有哪些，分别采用什么路由选择算法？对应的路由度量值怎样确定和表示")]),_._v(" "),i("p",[_._v("有RIP和OSPF，RIP采用距离矢量路由选择算法，OSPF采用链路状态路由选择算法")]),_._v(" "),i("p",[_._v("RIP的路由度量值由跳数给出，OSPF的路由度量值由链路状态给出")])]),_._v(" "),i("li",[i("p",[_._v("路由器中路由表的表项内容主要由哪些字段组成，什么是默认路由")]),_._v(" "),i("p",[_._v("IP地址、前缀、下一跳地址")]),_._v(" "),i("p",[_._v("默认路由是当路由表中的表项都不匹配时可以选择的路由")])]),_._v(" "),i("li",[i("p",[_._v("更新路由表")])])]),_._v(" "),i("p",[i("img",{attrs:{src:"/images/image-20210124202903074.png",alt:"image-20210124202903074"}})]),_._v(" "),i("h3",{attrs:{id:"第七章-数据链路层"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#第七章-数据链路层"}},[_._v("#")]),_._v(" 第七章 数据链路层")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("数据帧边界的界定采用什么方法")]),_._v(" "),i("p",[_._v("字符计数法、字符填充法、位填充法、物理违例法")])]),_._v(" "),i("li",[i("p",[_._v("有冲突的信道访问")]),_._v(" "),i("p",[_._v("随机访问协议，纯ALOHA、时隙ALOHA、CSMA")])]),_._v(" "),i("li",[i("p",[_._v("什么是信道访问中的坚持与非坚持")]),_._v(" "),i("ul",[i("li",[_._v("非坚持CSMA：节点在发送数据之间侦听信道是否空闲，若空闲则发送数据，若信道忙，则等待一个随机时间")]),_._v(" "),i("li",[_._v("坚持CSMA：1坚持是一旦发现信道空闲，发送数据的概率为1，若信道忙，就坚持侦听信道；p坚持是若信道空闲，以概率p发送数据，以概率1-p延迟发送")])])]),_._v(" "),i("li",[i("p",[_._v("写出CSMA/CD遇到冲突以后，二进制退避算法所采取的动作")]),_._v(" "),i("p",[_._v("以冲突窗口大小为基准，每个节点有一个冲突计数器C，退避的时间与冲突次数具有指数关系K，冲突次数越多，退避的时间就可能越长，若达到限定的冲突次数，该节点就停止发送数据")])]),_._v(" "),i("li",[i("p",[_._v("请写出ARP协议的工作原理")]),_._v(" "),i("p",[_._v("地址解析协议")]),_._v(" "),i("p",[_._v("首先，每台主机都会在自己的ARP缓冲区中建立一个ARP列表，以表示IP地址和MAC地址的对应关系。当源主机需要将一个数据包要发送到目的主机时，会首先检查自己ARP列表中是否存在该IP地址对应的MAC地址，如果有，就直接将数据包发送到这个MAC地址；如果没有，就向本地网段发起一个ARP请求的广播包，查询此目的主机对应的MAC地址。此ARP请求数据包里包括源主机的IP地址、硬件地址、以及目的主机的IP地址。网络中所有的主机收到这个ARP请求后，会检查数据包中的目的IP是否和自己的IP地址一致。如果不相同就忽略此数据包；如果相同，该主机首先将发送端的MAC地址和IP地址添加到自己的ARP列表中，如果ARP表中已经存在该IP的信息，则将其覆盖，然后给源主机发送一个ARP响应数据包，告诉对方自己是它需要查找的MAC地址；源主机收到这个ARP响应数据包后，将得到的目的主机的IP地址和MAC地址添加到自己的ARP列表中，并利用此信息开始数据的传输。如果源主机一直没有收到ARP响应数据包，表示ARP查询失败。")])]),_._v(" "),i("li",[i("p",[_._v("局域网的三个要素")]),_._v(" "),i("p",[_._v("拓扑结构；传输介质；信道访问协议")]),_._v(" "),i("p",[_._v("总线型、星形、环形、树形；双绞线、同轴电缆、光纤；CSMA/CD、CSMA/CA")])]),_._v(" "),i("li",[i("p",[_._v("虚拟局域网有哪些特点")]),_._v(" "),i("p",[_._v("广播控制、灵活性、安全性")])]),_._v(" "),i("li",[i("p",[_._v("交换机的工作原理")]),_._v(" "),i("p",[_._v("当交换机收到数据时，它会检查它的目的MAC地址，然后把数据从目的主机所在的接口转发出去。交换机之所以能实现这一功能，是因为交换机内部有一个MAC地址表，MAC地址表记录了网络中所有MAC地址与该交换机各端口的对应信息。某一数据帧需要转发时，交换机根据该数据帧的目的MAC地址来查找MAC地址表，从而得到该地址对应的端口，即知道具有该MAC地址的设备是连接在交换机的哪个端口上，然后交换机把数据帧从该端口转发出去。")])]),_._v(" "),i("li",[i("p",[_._v("简述CSAM/CD信道访问协议的工作原理")]),_._v(" "),i("p",[_._v("载波侦听多路访问/冲突检测协议")]),_._v(" "),i("p",[_._v("节点发送数据前必须侦听信道，如果信道空闲，节点可以立即发送数据并进行冲突检测；如果信道忙，继续侦听信道，直到信道出现空闲，再发送数据并进行冲突检测。节点检测到冲突后立即停止发送，推迟一个随机时间再尝试发送，重复上述过程。")])])]),_._v(" "),i("h3",{attrs:{id:"重点"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#重点"}},[_._v("#")]),_._v(" 重点")]),_._v(" "),i("ul",[i("li",[i("p",[_._v("三次握手")]),_._v(" "),i("p",[_._v("1、第一次握手：建立连接时,客户端发送syn包(syn=j)到服务器,并进入SYN_SEND状态,等待服务器确认； SYN：同步序列编号(Synchronize Sequence Numbers)")]),_._v(" "),i("p",[_._v("2、第二次握手：服务器收到syn包,必须确认客户的SYN（ack=j+1）,同时自己也发送一个SYN包（syn=k）,即SYN+ACK包,此时服务器进入SYN_RECV状态；")]),_._v(" "),i("p",[_._v("3、第三次握手：客户端收到服务器的SYN＋ACK包,向服务器发送确认包ACK(ack=k+1),此包发送完毕,客户端和服务器进入ESTABLISHED状态,完成三次握手。")])]),_._v(" "),i("li",[i("p",[_._v("延迟")]),_._v(" "),i("p",[_._v("传输延迟、传播延迟、处理延迟、排队延迟")]),_._v(" "),i("p",[_._v("最不确定：传输延迟，传输速率和传输距离都不确定")])]),_._v(" "),i("li",[i("p",[_._v("HTTP")]),_._v(" "),i("ul",[i("li",[_._v("非持续连接工作方式，若一个web文档上有多个连接对象需要与依次进行连接，每次浏览器和服务器的交互都需要有2倍的往返时延RTT，每建立一次TCP连接都需要重新分配缓存和建立变量，加重了服务器主机的负担")]),_._v(" "),i("li",[_._v("持续连接是指服务器在发送响应后仍然在一段时间内保持这条由TCP运输层协议建立起来的连接，使客户机和服务器可以继续在这条连接上传输HTTP报文")]),_._v(" "),i("li",[_._v("非流水线方式是客户机在收到前一个响应报文后才能发出下一个请求报文")]),_._v(" "),i("li",[_._v("流水线方式是客户机在收到响应报文之前就可以接着发出新的请求报文，服务器也可以连续发送响应报文")])])]),_._v(" "),i("li",[i("p",[_._v("TCP拥塞控制")]),_._v(" "),i("p",[_._v("慢启动、快速增长、拥塞避免的机制，即由小到大逐渐增大发送方拥塞窗口的值，使向网络中发送PDU的速率更加合理。慢启动：先将拥塞窗口值设置为一个MSS值，第一次发送报文段时，发送的报文段个数为1个，在经过第一个往返时间RTT后，若没有出现拥塞，发送方收到ACK后把拥塞窗口的值从1增大到2，以此类推，按2的指数规律增加报文段的个数，直到达到门限值。AIMD过程，加性增，乘性减，当超过门限值之后，按线性规律增加拥塞窗口值；若发送方没有按时收到ACK，或是收到了重复的ACK，此时把门限值设置为出现拥塞时发送窗口值的一半，然后把拥塞窗口值重新设置为1个MSS，开始新一轮的慢速启动算法")])])])])}),[],!1,null,null,null);v.default=l.exports}}]);